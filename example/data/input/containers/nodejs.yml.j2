---
name: {{ name }}
port: 10000
serverFile: server.js

docker:
  repoName: {{ name }}
  dockerfileName: Dockerfile-nodejs

env:
  - name: NODE_ENV
    value: {{ environment }}
  - name: CLUSTER_MODE_DISABLED
    value: "1"

  {%- if hasContainer.dind %}
  - name: DOCKER_HOST
    value: tcp://localhost:2376
  - name: DOCKER_TLS_CERTDIRe
    value:/certs
  - name: DOCKER_TLS_VERIFY
    value: "1"
  - name: DOCKER_CERT_PATH
    value: /certs/client
  {%- endif %}

templates:
  kubernetes:
    deployment.yml.j2:
      default:
        env:
          - name: NODE_ENV
            value: {{ environment }}
          - name: CLUSTER_MODE_DISABLED
            value: "1"
          {% if hasContainer.vault -%}
          - name: VAULT_ADDR
            value: http://127.0.0.1:8100
          {%- endif %}
        volumeMounts:
          - name: node
            mountPath: /logs
          - name: august-runtime-creds-volume
            mountPath: /root/august-runtime-creds
          {% if hasContainer.vault -%}
          - name: vault-token
            mountPath: /vault/etc
          - name: vault-config
            mountPath: /home/vault
          {%- endif %}
          {% if hasContainer.dind -%}
          - name: docker-certs
            mountPath: /certs
          - name: deployer-tmpdir
            mountPath: /deployer
          {%- endif %}
        requests:
          cpu: 25m
          memory: 100Mi
        limits:
          memory: 200Mi
        readinessProbe:
          httpGet:
            path:  /health
            scheme: HTTP
            port: {{ container.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path:  /health
            scheme: HTTP
            port: {{ container.port }}
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
